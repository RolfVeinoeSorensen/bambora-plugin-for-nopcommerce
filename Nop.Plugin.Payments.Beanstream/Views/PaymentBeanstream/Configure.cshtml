@{
    Layout = "";
}
@model ConfigurationModel
@using Nop.Plugin.Payments.Beanstream
@using Nop.Plugin.Payments.Beanstream.Models;
@using Nop.Web.Framework;
@Html.Action("StoreScopeConfiguration", "Setting", new { area = "Admin" })


<script type="text/javascript">
    $(document).ready(function() {
        $("#@Html.FieldIdFor(model => model.CurrencyId)").change(toggleMerchantId);
        toggleMerchantId();
    });

    function toggleMerchantId() {
        var selectedCurrencyId = $("#@Html.FieldIdFor(model => model.CurrencyId)").val();
        if (selectedCurrencyId == @(((int) CurrencyEnum.USDollars).ToString())) {
            $('#pnlUSMerchantId').show();
        $('#pnlCanadianMerchantId').hide();
    } else if (selectedCurrencyId == @(((int) CurrencyEnum.CanadianDollars).ToString())) {
        $('#pnlCanadianMerchantId').show();
        $('#pnlUSMerchantId').hide();
    }
    }
</script>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <table class="adminContent">
        <tr>
            <td colspan="2">
                <b>
                    If you're using this gateway ensure that your primary store currency is supported
                    by Beanstream.
                </b>
                <br />
                <br />
                This plugin requires an account on the Beanstream platform. With your account information, you first need to log in the Beanstream system on: <a href="https://www.beanstream.com/admin/sDefault.asp"></a>.
                <br />
                <br />
                1. On administration > account settings > order settings, you’ll be able to add additional security settings.
                <br />
                2. On the Transaction Validation Options part, select "Require hash validation on all Payment Gateway transaction requests" option. Then, generate your personal hash key.
                <br />
                3. Pick a word of your choice.
                <br />
                4. Hash it on MD5 with any website.
                <br />
                5. Enter the string generated on the Hash key field.
                <br />
                6. Pick the Hash algorithm MD5 to encrypt.
                <br />
                7. Complete the fields Approval Redirect and Decline Redirect of Transaction Response Pages with the URL, which might be something like https://www.yourSiteName.com/Plugins/PaymentBeanstream/ResultHandler.
                <br />
                8. Still on administration > account settings > order settings, complete the field Payment Gateway of Response Notification with the URL, which might be something like https://www.yourSiteName.com/Plugins/PaymentBeanstream/ResponseNotificationHandler.
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.OverrideStoreCheckboxFor(model => model.CurrencyId_OverrideForStore, model => model.CurrencyId, Model.ActiveStoreScopeConfiguration)
                @Html.NopLabelFor(model => model.CurrencyId):
            </td>
            <td class="adminData">
                @Html.DropDownListFor(model => model.CurrencyId, ((CurrencyEnum)Model.CurrencyId).ToSelectList())
                @Html.ValidationMessageFor(model => model.CurrencyId)
            </td>
        </tr>
        <tr id="pnlUSMerchantId">
            <td class="adminTitle">
                @Html.OverrideStoreCheckboxFor(model => model.USMerchantId_OverrideForStore, model => model.USMerchantId, Model.ActiveStoreScopeConfiguration)
                @Html.NopLabelFor(model => model.USMerchantId):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.USMerchantId)
                @Html.ValidationMessageFor(model => model.USMerchantId)
            </td>
        </tr>
        <tr id="pnlCanadianMerchantId">
            <td class="adminTitle">
                @Html.OverrideStoreCheckboxFor(model => model.CanadianMerchantId_OverrideForStore, model => model.CanadianMerchantId, Model.ActiveStoreScopeConfiguration)
                @Html.NopLabelFor(model => model.CanadianMerchantId):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.CanadianMerchantId)
                @Html.ValidationMessageFor(model => model.CanadianMerchantId)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.OverrideStoreCheckboxFor(model => model.HashValue_OverrideForStore, model => model.HashValue, Model.ActiveStoreScopeConfiguration)
                @Html.NopLabelFor(model => model.HashValue):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.HashValue)
                @Html.ValidationMessageFor(model => model.HashValue)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.OverrideStoreCheckboxFor(model => model.AdditionalFee_OverrideForStore, model => model.AdditionalFee, Model.ActiveStoreScopeConfiguration)
                @Html.NopLabelFor(model => model.AdditionalFee):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.AdditionalFee)
                @Html.ValidationMessageFor(model => model.AdditionalFee)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.OverrideStoreCheckboxFor(model => model.AdditionalFeePercentage_OverrideForStore, model => model.AdditionalFeePercentage, Model.ActiveStoreScopeConfiguration)
                @Html.NopLabelFor(model => model.AdditionalFeePercentage):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.AdditionalFeePercentage)
                @Html.ValidationMessageFor(model => model.AdditionalFeePercentage)
            </td>
        </tr>
        <tr>
            <td colspan="2">
                <input type="submit" name="save" class="k-button" value="@T("Admin.Common.Save")" />
            </td>
        </tr>
    </table>
}